{"version":3,"sources":["Components/AddOption.js","Components/Option.js","Components/Options.js","Components/Action.js","Components/Header.js","Components/OptionModal.js","Components/IndecisionApp.js","index.js"],"names":["AddOption","state","error","undefined","handleAddOption","e","preventDefault","option","target","elements","value","trim","props","setState","this","className","onSubmit","type","name","React","Component","Option","count","optionText","onClick","handleDeleteOption","Options","deleteOptions","options","length","map","index","key","Action","handlePick","disabled","hasOption","Header","title","subtitle","defaultProps","OptionModal","isOpen","selectedOption","contentLabel","closeTimeoutMS","onRequestClose","closeModal","IndecisionApp","handleDeleteOptions","opptoRemove","prevS","filter","op","random","Math","floor","handleCloseModal","indexOf","concat","json","localStorage","getItem","JSON","parse","console","log","prevProps","prevState","stringify","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f441432c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class AddOption extends React.Component {\n    /*  constructor(props) {\n          super(props);\n          this.handleAddOption = this.handleAddOption.bind(this);\n          this.state = {\n              error :undefined\n          }\n      }*/\n    state = {\n        error: undefined\n    }\n\n    handleAddOption = (e) => {\n        e.preventDefault();\n        const option = e.target.elements.option.value.trim();\n        const error = this.props.handleAddOption(option);\n\n        this.setState(() => ({ error: error }))\n        if (!error) {\n            e.target.elements.option.value = \"\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.error && <p className='add-option-error'>{this.state.error}</p>}\n\n                <form className='add-option' onSubmit={this.handleAddOption}>\n                    <input className='add-option__input' type=\"text\" name=\"option\" />\n                    <button className='button'>Add option</button>\n                </form>\n            </div >\n        );\n    }\n}","import React from 'react';\n\nconst Option = (props) => (\n    <div className='option'>\n\n        <p className=\"option__text\">{props.count}.\n        {props.optionText}</p>\n        <button\n            onClick={(e) => { props.handleDeleteOption(props.optionText); }}\n            className='button button--link'\n        > Remove </button>\n\n    </div>\n);\n\nexport default Option;","import React from 'react';\nimport Option from './Option';\n\nconst Options = (props) => (\n    <div>\n        <div className='widget-header'>\n            <h3 className=\"widget-header__title\"> Your Options</h3>\n            <button\n                className='button button--link'\n                onClick={props.deleteOptions}>\n                Remove All</button>\n\n\n        </div>\n        {props.options.length === 0 && <h3 className='widget-message'>Please Add Task to get started</h3>}\n        {props.options.map((option, index) => (\n            <Option key={option}\n                optionText={option}\n                count={index + 1}\n                handleDeleteOption={props.handleDeleteOption} />))}\n\n    </div>\n);\n\nexport default Options;","import React from 'react';\n\nconst Action = (props) => (\n    <div>\n        <button className='big-button'\n            onClick={props.handlePick}\n            disabled={!props.hasOption}>\n            What should i Do?\n         </button>\n    </div>\n);\n\n\nexport default Action;","import React from 'react';\n\nconst Header = (props) => (\n    <div className=\"header\">\n        <div className=\"container\">\n            <h1 className=\"header__title\">{props.title}</h1>\n            {props.subtitle && <h2 className='header__subtitle'>{props.subtitle}</h2>}\n        </div>\n    </div>\n);\nHeader.defaultProps = {\n    title: 'Indecision'\n}\n\nexport default Header;","import React from 'react';\nimport Modal from 'react-modal';\n\nconst OptionModal = (props) => (\n    <Modal\n        isOpen={!!props.selectedOption}\n        contentLabel='Selected Option'\n        closeTimeoutMS={200}\n        className='modal'\n        onRequestClose={props.closeModal}\n    >\n        <h3 className='modal__title'>Selected Option</h3>\n        {props.selectedOption && <p className='modal__body'>{props.selectedOption}</p>}\n        <button className='button' onClick={props.closeModal}> OKAY</button>\n\n    </Modal>\n);\n\nexport default OptionModal;","import React from 'react';\n\nimport AddOption from './AddOption';\nimport Options from './Options';\nimport Action from './Action';\nimport Header from './Header';\nimport OptionModal from './OptionModal';\n\nexport default class IndecisionApp extends React.Component {\n    /*\n      constructor(props) {\n          super(props);\n          this.handleDeleteOptions = this.handleDeleteOptions.bind(this);\n          this.handlePick = this.handlePick.bind(this);\n          this.handleAddOption = this.handleAddOption.bind(this);\n          this.handleDeleteOption = this.handleDeleteOption.bind(this);\n          this.state = {\n              options: props.options\n          }\n      }\n  */\n    state = {\n        options: [],\n        selectedOption: undefined\n\n    }\n    // EVENT HANDLERS\n    handleDeleteOptions = () => {\n        this.setState(() => ({ options: [] }))\n    }\n\n    handleDeleteOption = (opptoRemove) => {\n        this.setState((prevS) => ({\n            options: prevS.options.filter((op) => {\n                return opptoRemove !== op;\n            })\n        }));\n    }\n\n    handlePick = () => {\n        const random = Math.floor(Math.random() * this.state.options.length);\n        const option = this.state.options[random];\n        this.setState(() => ({\n            selectedOption: option\n        }));\n    }\n    handleCloseModal = () => {\n        this.setState(() => ({\n            selectedOption: undefined\n        }));\n\n    }\n\n\n\n    handleAddOption = (option) => {\n        //FORM VALIDATION\n        if (!option) {\n            return \"Enter Vaild Value to add Item\";\n        } else if (this.state.options.indexOf(option) > -1) {\n            return \"This Item Already Exist\";\n        }\n        this.setState((prevS) => ({ options: prevS.options.concat(option) }))\n    }\n\n\n\n    //LIFE CYCLE METHODS\n    componentDidMount() {\n        try {\n            const json = localStorage.getItem('options');\n            const options = JSON.parse(json);\n            if (options) {\n                this.setState(() => ({ options }));\n            }\n        } catch (e) {\n            //DO NOTHING\n        }\n        console.log('Fetching Data');\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.options.length !== this.state.options.length) {\n            const json = JSON.stringify(this.state.options);\n            localStorage.setItem('options', json);\n            console.log('Saving Data');\n        }\n    }\n    componentWillUnmount() {\n        console.log('UNMOUNTED');\n    }\n\n\n    // RENDER\n    render() {\n        const subtitle = \"Put your life in the hands of a computer\";\n        //const options = [\"One thing\", \"Two thing\", \"Three things\"];\n        return (\n            <div>\n                <Header subtitle={subtitle} />\n                <div className=\"container\">\n                    <Action hasOption={this.state.options.length > 0} handlePick={this.handlePick} />\n                    <div className='widget'>\n                        <Options options={this.state.options}\n                            deleteOptions={this.handleDeleteOptions}\n                            handleDeleteOption={this.handleDeleteOption} />\n                        <AddOption handleAddOption={this.handleAddOption} />\n                    </div>\n\n                    <OptionModal closeModal={this.handleCloseModal} selectedOption={this.state.selectedOption} />\n                </div>\n            </div>\n        );\n    }\n}\n\nIndecisionApp.defaultProps = {\n    options: ['HELLO ', ' WORLD ']\n}\n\n\n\n","// REACT \nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport 'normalize.css'\nimport './Styles/styles.scss'\n\n\n//COMPONENTS\nimport IndecisionApp from './Components/IndecisionApp';\nReactDOM.render(<IndecisionApp />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}